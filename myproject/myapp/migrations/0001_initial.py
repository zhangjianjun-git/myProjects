# Generated by Django 4.2.17 on 2025-02-12 02:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='班级名称')),
                ('grade', models.CharField(max_length=50, verbose_name='年级')),
            ],
            options={
                'verbose_name': '班级信息',
                'verbose_name_plural': '班级信息',
                'db_table': 't_class',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='学生姓名')),
                ('sex', models.CharField(max_length=50, verbose_name='性别')),
                ('age', models.IntegerField(verbose_name='年龄')),
                ('address', models.CharField(blank=True, max_length=250, verbose_name='家庭住址')),
                ('enter_date', models.DateField(blank=True, null=True, verbose_name='入学时间')),
                ('remarks', models.TextField(blank=True, verbose_name='备注')),
                ('sclass', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.class', verbose_name='班级')),
            ],
            options={
                'verbose_name': '学生信息',
                'verbose_name_plural': '学生信息',
                'db_table': 't_student',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='教师姓名')),
                ('sex', models.CharField(max_length=50, verbose_name='性别')),
                ('age', models.IntegerField(verbose_name='年龄')),
                ('address', models.CharField(blank=True, max_length=250, verbose_name='家庭住址')),
                ('remarks', models.TextField(blank=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '教师信息',
                'verbose_name_plural': '教师信息',
                'db_table': 't_teacher',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='年龄')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否管理员')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='注册时间')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'db_table': 't_user',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='课程名称')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='课程价格')),
                ('remarks', models.TextField(blank=True, verbose_name='备注')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.teacher', verbose_name='教师')),
            ],
            options={
                'verbose_name': '课程信息',
                'verbose_name_plural': '课程信息',
                'db_table': 't_course',
            },
        ),
        migrations.AddField(
            model_name='class',
            name='cteacher',
            field=models.ManyToManyField(to='myapp.teacher', verbose_name='老师'),
        ),
        migrations.CreateModel(
            name='StudentCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='成绩')),
                ('remarks', models.TextField(blank=True, verbose_name='备注')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.course', verbose_name='课程')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '学生选课关系',
                'verbose_name_plural': '学生选课关系',
                'db_table': 't_student_course',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, verbose_name='备注')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.student', verbose_name='学生')),
                ('student_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.class', verbose_name='班级')),
            ],
            options={
                'verbose_name': '学生班级关系',
                'verbose_name_plural': '学生班级关系',
                'db_table': 't_student_class',
                'unique_together': {('student', 'student_class')},
            },
        ),
    ]
